{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\web\\\\React-Practical-2-master\\\\src\\\\Components\\\\Exportcsv.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\n\n// npm install --save react-csv-downloader (please install )\nimport CsvDownloader from 'react-csv-downloader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExportCsv() {\n  _s();\n  const [userData, setUserdata] = useState([]);\n  useEffect(() => {\n    const getUserdata = async () => {\n      const requestData = await fetch(\"http://localhost:5000/api/user\");\n      const responceData = await requestData.json();\n      //console.log(responceData);\n      setUserdata(responceData);\n    };\n    getUserdata();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"mt-3\",\n            children: \"Export Data in Csv\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-bordered\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"#\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 29,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Username\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 30,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 31,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Phone No\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 32,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 33,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: userData.map((uData, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: uData.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: uData.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: uData.phone\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: uData.address\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: uData.status === 1 ? \"Active\" : \"Inactive\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 41\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(CsvDownloader, {\n            datas: userData,\n            text: \"Export CSV\",\n            filename: `userdata_` + new Date().toLocaleString(),\n            extension: \".csv\",\n            className: \"btn btn-success\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_s(ExportCsv, \"+L0TlkssUTj+LnGusupl4BqLLsQ=\");\n_c = ExportCsv;\nexport default ExportCsv;\nvar _c;\n$RefreshReg$(_c, \"ExportCsv\");","map":{"version":3,"names":["React","useState","useEffect","CsvDownloader","ExportCsv","userData","setUserdata","getUserdata","requestData","fetch","responceData","json","map","uData","index","username","email","phone","address","status","Date","toLocaleString"],"sources":["C:/Users/user/web/React-Practical-2-master/src/Components/Exportcsv.js"],"sourcesContent":["import React,{ useState, useEffect} from \"react\";\r\n\r\n// npm install --save react-csv-downloader (please install )\r\nimport CsvDownloader from 'react-csv-downloader';\r\n\r\nfunction ExportCsv()\r\n{\r\n    const[userData, setUserdata]= useState([]);\r\n\r\n    useEffect( ()=>{\r\n        const getUserdata= async()=>{\r\n            const requestData= await fetch(\"http://localhost:5000/api/user\");\r\n            const responceData= await requestData.json();\r\n            //console.log(responceData);\r\n            setUserdata(responceData);\r\n\r\n        }\r\n        getUserdata();\r\n    },[]);\r\n    return(\r\n        <React.Fragment>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h5 className=\"mt-3\">Export Data in Csv</h5>\r\n                         <table className=\"table table-bordered\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>#</th>\r\n                                    <th>Username</th>\r\n                                    <th>Email</th>\r\n                                    <th>Phone No</th>\r\n                                    <th>Address</th>\r\n                                    <th>Status</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    userData.map((uData, index)=>(\r\n                                        <tr key={index}>\r\n                                        <td>{index+1}</td>\r\n                                        <td>{uData.username}</td>\r\n                                        <td>{uData.email}</td>\r\n                                        <td>{uData.phone}</td>\r\n                                        <td>{uData.address}</td>\r\n                                        <td>{uData.status===1?\"Active\":\"Inactive\"}</td>\r\n    \r\n                                    </tr>\r\n                                    ))\r\n                                }\r\n                               \r\n                            </tbody>\r\n\r\n                         </table>                      \r\n                     <CsvDownloader \r\n                     datas={userData}\r\n                     text=\"Export CSV\"\r\n                     filename={`userdata_`+new Date().toLocaleString()}\r\n                     extension=\".csv\"\r\n                     className=\"btn btn-success\"\r\n                     />\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport default ExportCsv;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;;AAEhD;AACA,OAAOC,aAAa,MAAM,sBAAsB;AAAC;AAEjD,SAASC,SAAS,GAClB;EAAA;EACI,MAAK,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAEL,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAE,MAAI;IACX,MAAMK,WAAW,GAAE,YAAS;MACxB,MAAMC,WAAW,GAAE,MAAMC,KAAK,CAAC,gCAAgC,CAAC;MAChE,MAAMC,YAAY,GAAE,MAAMF,WAAW,CAACG,IAAI,EAAE;MAC5C;MACAL,WAAW,CAACI,YAAY,CAAC;IAE7B,CAAC;IACDH,WAAW,EAAE;EACjB,CAAC,EAAC,EAAE,CAAC;EACL,oBACI,QAAC,KAAK,CAAC,QAAQ;IAAA,uBACX;MAAK,SAAS,EAAC,WAAW;MAAA,uBACtB;QAAK,SAAS,EAAC,KAAK;QAAA,uBAChB;UAAK,SAAS,EAAC,WAAW;UAAA,wBACtB;YAAI,SAAS,EAAC,MAAM;YAAA,UAAC;UAAkB;YAAA;YAAA;YAAA;UAAA,QAAK,eAC3C;YAAO,SAAS,EAAC,sBAAsB;YAAA,wBACpC;cAAA,uBACI;gBAAA,wBACI;kBAAA,UAAI;gBAAC;kBAAA;kBAAA;kBAAA;gBAAA,QAAK,eACV;kBAAA,UAAI;gBAAQ;kBAAA;kBAAA;kBAAA;gBAAA,QAAK,eACjB;kBAAA,UAAI;gBAAK;kBAAA;kBAAA;kBAAA;gBAAA,QAAK,eACd;kBAAA,UAAI;gBAAQ;kBAAA;kBAAA;kBAAA;gBAAA,QAAK,eACjB;kBAAA,UAAI;gBAAO;kBAAA;kBAAA;kBAAA;gBAAA,QAAK,eAChB;kBAAA,UAAI;gBAAM;kBAAA;kBAAA;kBAAA;gBAAA,QAAK;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YACd;cAAA;cAAA;cAAA;YAAA,QACD,eACR;cAAA,UAEQF,QAAQ,CAACO,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACtB;gBAAA,wBACA;kBAAA,UAAKA,KAAK,GAAC;gBAAC;kBAAA;kBAAA;kBAAA;gBAAA,QAAM,eAClB;kBAAA,UAAKD,KAAK,CAACE;gBAAQ;kBAAA;kBAAA;kBAAA;gBAAA,QAAM,eACzB;kBAAA,UAAKF,KAAK,CAACG;gBAAK;kBAAA;kBAAA;kBAAA;gBAAA,QAAM,eACtB;kBAAA,UAAKH,KAAK,CAACI;gBAAK;kBAAA;kBAAA;kBAAA;gBAAA,QAAM,eACtB;kBAAA,UAAKJ,KAAK,CAACK;gBAAO;kBAAA;kBAAA;kBAAA;gBAAA,QAAM,eACxB;kBAAA,UAAKL,KAAK,CAACM,MAAM,KAAG,CAAC,GAAC,QAAQ,GAAC;gBAAU;kBAAA;kBAAA;kBAAA;gBAAA,QAAM;cAAA,GANtCL,KAAK;gBAAA;gBAAA;gBAAA;cAAA,QASjB;YAAC;cAAA;cAAA;cAAA;YAAA,QAGF;UAAA;YAAA;YAAA;YAAA;UAAA,QAEH,eACZ,QAAC,aAAa;YACd,KAAK,EAAET,QAAS;YAChB,IAAI,EAAC,YAAY;YACjB,QAAQ,EAAG,WAAU,GAAC,IAAIe,IAAI,EAAE,CAACC,cAAc,EAAG;YAClD,SAAS,EAAC,MAAM;YAChB,SAAS,EAAC;UAAiB;YAAA;YAAA;YAAA;UAAA,QACzB;QAAA;UAAA;UAAA;UAAA;QAAA;MAEG;QAAA;QAAA;QAAA;MAAA;IACJ;MAAA;MAAA;MAAA;IAAA;EACJ;IAAA;IAAA;IAAA;EAAA,QAEO;AAEzB;AAAC,GA/DQjB,SAAS;AAAA,KAATA,SAAS;AAgElB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}